#ifndef __SHADOW_FUNCTIONS__
#define __SHADOW_FUNCTIONS__

#include "reimplemented/Threads/Threading.h"

void InitialUndefinedData(RecompContext* ctx);
void Function_0x10(RecompContext* ctx);
void _Exit1(RecompContext* ctx);
undefined ResolveRelocation(RecompContext* ctx);
undefined DecodeSection(RecompContext* ctx);
undefined RelocateElfInfoHeader(RecompContext* ctx);
undefined OutputLinkerScriptFile(RecompContext* ctx);
void Function_0xA58(RecompContext* ctx);
void LoaderSysJumpRecoverPointNoStateSetting(RecompContext* ctx);
void LoaderSysJumpRecoverPoint(RecompContext* ctx);
undefined LoadModule(RecompContext* ctx, char* moduleName);
undefined MoveElf(RecompContext* ctx);
void GetProgramNameAndOffset(RecompContext* ctx, char* path);
undefined LoaderSysRelocateOnlineElfInfo(RecompContext* ctx);
undefined RelocateCode(RecompContext* ctx);
void FreeDecodedSection(RecompContext* ctx);
undefined RelocateSelfSymbol(RecompContext* ctx);
undefined DisposeRelocationElement(RecompContext* ctx);
undefined SetHeapStartPoint(RecompContext* ctx);
void GetHeapCurrentPoint(RecompContext* ctx);
undefined LoaderSysResetSystem(RecompContext* ctx);
void Function_0x1AA0(RecompContext* ctx);
void _checkExistString(RecompContext* ctx);
void Function_0x1B88(RecompContext* ctx);
void _execProgWithThread(RecompContext* ctx, char* moduleName);
void execProgWithThread(RecompContext* ctx, char* path, int threadID);
void Function_0x1EBC(RecompContext* ctx);
undefined InitException(RecompContext* ctx);
void setCop0Epc(RecompContext* ctx);
void ExceptionCallback1(RecompContext* ctx);
undefined DefaultDebugHandler(RecompContext* ctx);
undefined LoaderSysDeleteAllExternalIntcHandler(RecompContext* ctx);
undefined LoaderSysDeleteAllExternalSema(RecompContext* ctx);
undefined LoaderSysExecuteRecoveryFirstProcess(RecompContext* ctx);
undefined LoaderSysEntryExternalIntcHandlerList(RecompContext* ctx);
void LoaderSysEntryExternalThreadList(RecompContext* ctx);
undefined LoaderSysEntryExternalSemaList(RecompContext* ctx);
undefined LoaderSysEntryExternalIopMemoryList(RecompContext* ctx);
void LoaderSysDeleteExternalIntcHandlerList(RecompContext* ctx);
void LoaderSysDeleteExternalThreadList(RecompContext* ctx);
void LoaderSysDeleteExternalSemaList(RecompContext* ctx);
void LoaderSysDeleteExternalIopMemoryList(RecompContext* ctx);
void LoaderSysInitExternalIntcHandlerList(RecompContext* ctx);
void LoaderSysInitExternalSemaList(RecompContext* ctx);
void LoaderSysInitExternalThreadList(RecompContext* ctx);
void LoaderSysExternalThreadListCallBack(RecompContext* ctx);
void LoaderSysChangeExteranalThreadPriorityExceptMe(RecompContext* ctx);
void LoaderSysDeleteAllExternalThread(RecompContext* ctx);
undefined LoaderSysDeleteAllExternalThreadExceptMe(RecompContext* ctx);
undefined LoaderSysInitExternalIopMemoryList(RecompContext* ctx);
undefined LoaderSysDeleteAllExternalIopMemory(RecompContext* ctx);
void LoaderSysPrintf(char* text);
undefined LoaderSysLoadIopModuleFromEEBuffer(RecompContext* ctx);
undefined LoaderSysCheckCDBootMode(RecompContext* ctx);
undefined LoaderSysPutString(char* text);
void* LoaderSysFOpen(char* path, uint param_2, uint param_3);
void LoaderSysFClose(void* fileHandle);
int LoaderSysFSeek(RecompContext* ctx);
undefined LoaderSysFSeek64(RecompContext* ctx);
int LoaderSysFRead(void* filePointer, void* output, int length);
undefined LoaderSysFWrite(RecompContext* ctx);
void LoaderSysRemove(RecompContext* ctx);
void LoaderSysRmdir(RecompContext* ctx);
void LoaderSysMkdir(RecompContext* ctx);
int LoaderSysGetstat(char* name, void* buffer);
void LoaderSysChstat(RecompContext* ctx);
undefined LoaderSysGetMemoryInfo(RecompContext* ctx);
undefined LoaderSysDumpIopModuleIdentifiers(RecompContext* ctx);
undefined LoaderSysSendAbort(RecompContext* ctx);
undefined LoaderSysFlushPrint(RecompContext* ctx);
undefined checkHookDesc(RecompContext* ctx);
void setNewIopIdentifier(RecompContext* ctx);
void WarmUpCdDrive(RecompContext* ctx);
undefined loaderLoop(RecompContext* ctx);
undefined LoaderSysGetBootArg(RecompContext* ctx);
undefined LoaderSysLoadIopModule(RecompContext* ctx);
undefined LoaderSysUnloadIopModuleByName(RecompContext* ctx);
undefined LoaderSysHookPoint(RecompContext* ctx);
undefined LoaderSysRebootIop(RecompContext* ctx);
undefined loaderExecResetCallback(RecompContext* ctx);
undefined loaderSetResetCallback(RecompContext* ctx);
void memprintf(RecompContext* ctx);
undefined imemprintf(RecompContext* ctx);
undefined initmemprintf(RecompContext* ctx);
void Function_0x4090(RecompContext* ctx);
void Function_0x4428(RecompContext* ctx);
void Function_0x4668(RecompContext* ctx);
void Function_0x4818(RecompContext* ctx);
undefined LoaderSysInitTCP(RecompContext* ctx);
undefined padSysTickProc(RecompContext* ctx);
undefined padsysInit(RecompContext* ctx);
undefined padSysGet(RecompContext* ctx);
undefined padSysReadForLoader(RecompContext* ctx);
undefined padSysVibSetAcrParam(RecompContext* ctx);
void LoaderSysSetPowerOffCallBackFunc(RecompContext* ctx);
undefined PreparePowerOff(RecompContext* ctx);
void Function_0x4FEC(RecompContext* ctx);
undefined usbSerialSysPutString(RecompContext* ctx);
undefined usbSerialSysPrintf(RecompContext* ctx);
undefined usbSerialSysInit(RecompContext* ctx);
void Function_0x53F0(RecompContext* ctx);
void Function_0x53F4(RecompContext* ctx);
undefined PutFont(RecompContext* ctx);
undefined _putString(RecompContext* ctx);
void PutString(RecompContext* ctx);
void PutStringS(long something, char* format);
void Function_0x59D4(RecompContext* ctx);
undefined Sync(RecompContext* ctx);
undefined ReinitDisp(RecompContext* ctx);
undefined LoaderSysDrawSprite(RecompContext* ctx);
undefined ExecBaseProc(RecompContext* ctx);
void SetLocate(RecompContext* ctx);
undefined ScrollDisplay(RecompContext* ctx);
undefined ClearDisplay(RecompContext* ctx);
undefined InitDisp(RecompContext* ctx);
void RestoreNormalDrawEnvironment(RecompContext* ctx);
void SetTextureWithFrameBuffer(RecompContext* ctx);
void SetTexDrawEnvironment(RecompContext* ctx);
void SetDrawnTextureEnvironment(RecompContext* ctx);
void SetDrawEnvironment(RecompContext* ctx);
void SetPrimColor(RecompContext* ctx);
void SetPrimColorTex(RecompContext* ctx);
void PutChar(RecompContext* ctx);
undefined RFU000_FullReset(RecompContext* ctx);
undefined ResetEE(RecompContext* ctx);
undefined SetGsCrt(RecompContext* ctx);
undefined RFU003(RecompContext* ctx);
void _Exit(RecompContext* ctx);
undefined RFU005(RecompContext* ctx);
undefined _LoadExecPS2(RecompContext* ctx);
undefined _ExecPS2(RecompContext* ctx);
undefined RFU008(RecompContext* ctx);
undefined RFU009(RecompContext* ctx);
undefined AddSbusIntcHandler(RecompContext* ctx);
undefined RemoveSbusIntcHandler(RecompContext* ctx);
undefined Interrupt2Iop(RecompContext* ctx);
void SetVTLBRefillHandler(RecompContext* ctx);
void SetVCommonHandler(RecompContext* ctx);
undefined SetVInterruptHandler(RecompContext* ctx);
undefined AddIntcHandler(RecompContext* ctx);
undefined AddIntcHandler2(RecompContext* ctx);
undefined RemoveIntcHandler(RecompContext* ctx);
undefined AddDmacHandler(RecompContext* ctx);
void AddDmacHandler2(RecompContext* ctx);
undefined RemoveDmacHandler(RecompContext* ctx);
undefined _EnableIntc(RecompContext* ctx);
undefined _DisableIntc(RecompContext* ctx);
undefined _EnableDmac(RecompContext* ctx);
undefined _DisableDmac(RecompContext* ctx);
void SetAlarm(RecompContext* ctx);
void ReleaseAlarm(RecompContext* ctx);
undefined _iEnableIntc(RecompContext* ctx);
undefined _iDisableIntc(RecompContext* ctx);
undefined _iEnableDmac(RecompContext* ctx);
undefined _iDisableDmac(RecompContext* ctx);
void iSetAlarm(RecompContext* ctx);
void iReleaseAlarm(RecompContext* ctx);
void CreateThread(ThreadParam* parameters);
undefined DeleteThread(RecompContext* ctx);
undefined _StartThread(RecompContext* ctx);
undefined ExitThread(RecompContext* ctx);
undefined ExitDeleteThread(RecompContext* ctx);
undefined TerminateThread(RecompContext* ctx);
void iTerminateThread(RecompContext* ctx);
void DisableDispatchThread(RecompContext* ctx);
void EnableDispatchThread(RecompContext* ctx);
void ChangeThreadPriority(RecompContext* ctx);
undefined iChangeThreadPriority(RecompContext* ctx);
undefined RotateThreadReadyQueue(RecompContext* ctx);
void _iRotateThreadReadyQueue(RecompContext* ctx);
void ReleaseWaitThread(RecompContext* ctx);
void iReleaseWaitThread(RecompContext* ctx);
undefined GetThreadId(RecompContext* ctx);
undefined ReferThreadStatus(RecompContext* ctx);
void iReferThreadStatus(RecompContext* ctx);
undefined SleepThread(RecompContext* ctx);
undefined WakeupThread(RecompContext* ctx);
undefined _iWakeupThread(RecompContext* ctx);
undefined CancelWakeupThread(RecompContext* ctx);
void iCancelWakeupThread(RecompContext* ctx);
undefined SuspendThread(RecompContext* ctx);
undefined _iSuspendThread(RecompContext* ctx);
void ResumeThread(RecompContext* ctx);
void iResumeThread(RecompContext* ctx);
void JoinThread(RecompContext* ctx);
void RFU060(RecompContext* ctx);
void RFU061(RecompContext* ctx);
undefined EndOfHeap(RecompContext* ctx);
void RFU063(RecompContext* ctx);
undefined CreateSema(RecompContext* ctx);
undefined DeleteSema(RecompContext* ctx);
undefined SignalSema(RecompContext* ctx);
undefined iSignalSema(RecompContext* ctx);
undefined WaitSema(RecompContext* ctx);
undefined PollSema(RecompContext* ctx);
void iPollSema(RecompContext* ctx);
undefined ReferSemaStatus(RecompContext* ctx);
void iReferSemaStatus(RecompContext* ctx);
void RFU073(RecompContext* ctx);
undefined SetOsdConfigParam(RecompContext* ctx);
undefined GetOsdConfigParam(RecompContext* ctx);
void GetGsHParam(RecompContext* ctx);
void GetGsVParam(RecompContext* ctx);
void SetGsHParam(RecompContext* ctx);
void SetGsVParam(RecompContext* ctx);
void RFU080_CreateEventFlag(RecompContext* ctx);
void RFU081_DeleteEventFlag(RecompContext* ctx);
void RFU082_SetEventFlag(RecompContext* ctx);
void RFU083_iSetEventFlag(RecompContext* ctx);
void RFU084_ClearEventFlag(RecompContext* ctx);
void RFU085_iClearEventFlag(RecompContext* ctx);
void RFU086_WaitEvnetFlag(RecompContext* ctx);
void RFU087_PollEvnetFlag(RecompContext* ctx);
void RFU088_iPollEvnetFlag(RecompContext* ctx);
void RFU089_ReferEventFlagStatus(RecompContext* ctx);
void RFU090_iReferEventFlagStatus(RecompContext* ctx);
void EnableIntcHandler(RecompContext* ctx);
void iEnableIntcHandler(RecompContext* ctx);
void DisableIntcHandler(RecompContext* ctx);
void iDisableIntcHandler(RecompContext* ctx);
void EnableDmacHandler(RecompContext* ctx);
void iEnableDmacHandler(RecompContext* ctx);
void DisableDmacHandler(RecompContext* ctx);
void iDisableDmacHandler(RecompContext* ctx);
void KSeg0(RecompContext* ctx);
void EnableCache(RecompContext* ctx);
void DisableCache(RecompContext* ctx);
void GetCop0(RecompContext* ctx);
undefined FlushCache(RecompContext* ctx);
void CpuConfig(RecompContext* ctx);
undefined iGetCop0(RecompContext* ctx);
void iFlushCache(RecompContext* ctx);
void iCpuConfig(RecompContext* ctx);
undefined sceSifStopDma(RecompContext* ctx);
void SetCPUTimerHandler(RecompContext* ctx);
void SetCPUTimer(RecompContext* ctx);
void SetOsdConfigParam2(RecompContext* ctx);
void GetOsdConfigParam2(RecompContext* ctx);
undefined GsGetIMR(RecompContext* ctx);
undefined iGsGetIMR(RecompContext* ctx);
undefined GsPutIMR(RecompContext* ctx);
undefined iGsPutIMR(RecompContext* ctx);
void SetPgifHandler(RecompContext* ctx);
undefined SetVSyncFlag(RecompContext* ctx);
void RFU116(RecompContext* ctx);
void _print(RecompContext* ctx);
undefined sceSifDmaStat(RecompContext* ctx);
void isceSifDmaStat(RecompContext* ctx);
undefined sceSifSetDma(RecompContext* ctx);
undefined isceSifSetDma(RecompContext* ctx);
undefined sceSifSetDChain(RecompContext* ctx);
undefined isceSifSetDChain(RecompContext* ctx);
undefined sceSifSetReg(RecompContext* ctx);
undefined sceSifGetReg(RecompContext* ctx);
undefined _ExecOSD(RecompContext* ctx);
undefined Deci2Call(RecompContext* ctx);
void PSMode(RecompContext* ctx);
void MachineType(RecompContext* ctx);
undefined GetMemorySize(RecompContext* ctx);
undefined _InitTLB(RecompContext* ctx);
undefined QueryIntrContext(RecompContext* ctx);
undefined DisableIntc(RecompContext* ctx);
undefined EnableIntc(RecompContext* ctx);
undefined DisableDmac(RecompContext* ctx);
undefined EnableDmac(RecompContext* ctx);
undefined iEnableIntc(RecompContext* ctx);
undefined iDisableIntc(RecompContext* ctx);
void iEnableDmac(RecompContext* ctx);
void iDisableDmac(RecompContext* ctx);
void Function_0x7690(RecompContext* ctx);
undefined InitThread(RecompContext* ctx);
void iWakeupThread(RecompContext* ctx);
void iRotateThreadReadyQueue(RecompContext* ctx);
void iSuspendThread(RecompContext* ctx);
undefined DelayThread(RecompContext* ctx);
void StartThread(RecompContext* ctx);
void Function_0x7C48(RecompContext* ctx);
void sceVsnprintf(RecompContext* ctx);
void sceSnprintf(RecompContext* ctx);
void sceVprintf(RecompContext* ctx);
void scePrintf(RecompContext* ctx);
undefined kprintf(RecompContext* ctx);
undefined sceSifInitRpc(RecompContext* ctx);
undefined sceSifExitRpc(RecompContext* ctx);
undefined sceSifGetOtherData(RecompContext* ctx);
undefined sceSifBindRpc(RecompContext* ctx);
undefined sceSifCallRpc(RecompContext* ctx, undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined4 param_9);
undefined sceSifCheckStatRpc(RecompContext* ctx);
undefined sceSifSetRpcQueue(RecompContext* ctx);
undefined sceSifRegisterRpc(RecompContext* ctx);
undefined sceSifRemoveRpc(RecompContext* ctx);
undefined sceSifRemoveRpcQueue(RecompContext* ctx);
undefined sceSifGetNextRequest(RecompContext* ctx);
undefined sceSifExecRequest(RecompContext* ctx);
void sceSifRpcLoop(RecompContext* ctx);
void scePowerOffHandler(RecompContext* ctx);
undefined sceFsInit(RecompContext* ctx);
undefined sceFsReset(RecompContext* ctx);
void sceFsSetIopBuf(RecompContext* ctx);
void sceFsSetIopPrio(RecompContext* ctx);
void sceOpen(RecompContext* ctx);
undefined sceClose(RecompContext* ctx);
undefined sceLseek(RecompContext* ctx);
void sceRead(RecompContext* ctx);
undefined sceWrite(RecompContext* ctx);
undefined sceIoctl(RecompContext* ctx);
undefined sceIoctl2(RecompContext* ctx);
undefined sceRemove(RecompContext* ctx);
void sceMkdir(RecompContext* ctx);
undefined sceRmdir(RecompContext* ctx);
void sceFormat(RecompContext* ctx);
void sceAddDrv(RecompContext* ctx);
void sceDelDrv(RecompContext* ctx);
void sceDopen(RecompContext* ctx);
void sceDclose(RecompContext* ctx);
void sceDread(RecompContext* ctx);
undefined sceGetstat(RecompContext* ctx);
void sceChstat(RecompContext* ctx);
void sceRename(RecompContext* ctx);
void sceChdir(RecompContext* ctx);
void sceSync(RecompContext* ctx);
void sceMount(RecompContext* ctx);
void sceUmount(RecompContext* ctx);
void sceLseek64(RecompContext* ctx);
undefined sceDevctl(RecompContext* ctx);
undefined sceSymlink(RecompContext* ctx);
undefined sceReadlink(RecompContext* ctx);
undefined sceSifInitIopHeap(RecompContext* ctx);
undefined sceSifAllocIopHeap(RecompContext* ctx);
undefined sceSifAllocSysMemory(RecompContext* ctx);
undefined sceSifFreeSysMemory(RecompContext* ctx);
undefined sceSifFreeIopHeap(RecompContext* ctx);
void sceSifLoadIopHeap(RecompContext* ctx);
void sceSifQueryMemSize(RecompContext* ctx);
void sceSifQueryMaxFreeMemSize(RecompContext* ctx);
undefined sceSifQueryTotalFreeMemSize(RecompContext* ctx);
undefined sceSifQueryBlockTopAddress(RecompContext* ctx);
void sceSifQueryBlockSize(RecompContext* ctx);
undefined sceSifLoadFileReset(RecompContext* ctx);
undefined sceSifStopModule(RecompContext* ctx);
undefined sceSifUnloadModule(RecompContext* ctx);
undefined sceSifSearchModuleByName(RecompContext* ctx);
undefined sceSifSearchModuleByAddress(RecompContext* ctx);
undefined sceSifLoadModuleBuffer(RecompContext* ctx);
void sceSifLoadStartModuleBuffer(RecompContext* ctx);
void sceSifLoadModule(RecompContext* ctx);
undefined sceSifLoadStartModule(RecompContext* ctx);
void sceSifLoadElfPart(RecompContext* ctx);
void sceSifLoadElf(RecompContext* ctx);
void sceSifGetIopAddr(RecompContext* ctx);
void sceSifSetIopAddr(RecompContext* ctx);
undefined sceSifResetIop(RecompContext* ctx);
void sceSifIsAliveIop(RecompContext* ctx);
undefined sceSifSyncIop(RecompContext* ctx);
void sceSifRebootIop(RecompContext* ctx);
undefined SetTLBHandler(RecompContext* ctx);
void SetDebugHandler(RecompContext* ctx);
undefined InitTLBFunctions(RecompContext* ctx);
void PutTLBEntry(RecompContext* ctx);
void iPutTLBEntry(RecompContext* ctx);
undefined SetTLBEntry(RecompContext* ctx);
void iSetTLBEntry(RecompContext* ctx);
void GetTLBEntry(RecompContext* ctx);
void iGetTLBEntry(RecompContext* ctx);
void ProbeTLBEntry(RecompContext* ctx);
void iProbeTLBEntry(RecompContext* ctx);
void ExpandScratchPad(RecompContext* ctx);
void InitTLB(RecompContext* ctx);
undefined _kTLBException(RecompContext* ctx);
undefined _xlaunch(RecompContext* ctx);
void _kExitTLBHandler(RecompContext* ctx);
undefined _kDebugException(RecompContext* ctx);
undefined DIntr(RecompContext* ctx);
undefined EIntr(RecompContext* ctx);
void __sceKernlGetEhSemaId(RecompContext* ctx);
undefined GetSystemCallEntry(RecompContext* ctx);
undefined _InitSys(RecompContext* ctx);
undefined InitExecPS2(RecompContext* ctx);
void ExecPS2(RecompContext* ctx);
void LoadExecPS2(RecompContext* ctx);
undefined Exit(RecompContext* ctx);
undefined ExecOSD(RecompContext* ctx);
undefined InitAlarm(RecompContext* ctx);
undefined SetT2(RecompContext* ctx);
undefined SetT2_COUNT(RecompContext* ctx);
undefined SetT2_MODE(RecompContext* ctx);
undefined SetT2_COMP(RecompContext* ctx);
undefined InitTimer(RecompContext* ctx);
void EndTimer(RecompContext* ctx);
void GetTimerPreScaleFactor(RecompContext* ctx);
undefined StartTimerSystemTime(RecompContext* ctx);
undefined StopTimerSystemTime(RecompContext* ctx);
undefined iGetTimerSystemTime(RecompContext* ctx);
void GetTimerSystemTime(RecompContext* ctx);
undefined iAllocTimerCounter(RecompContext* ctx);
undefined AllocTimerCounter(RecompContext* ctx);
undefined iFreeTimerCounter(RecompContext* ctx);
undefined FreeTimerCounter(RecompContext* ctx);
undefined iGetTimerUsedUnusedCounters(RecompContext* ctx);
undefined GetTimerUsedUnusedCounters(RecompContext* ctx);
undefined iStartTimerCounter(RecompContext* ctx);
undefined StartTimerCounter(RecompContext* ctx);
undefined iStopTimerCounter(RecompContext* ctx);
void StopTimerCounter(RecompContext* ctx);
void SetTimerCount(RecompContext* ctx);
undefined iGetTimerBaseTime(RecompContext* ctx);
undefined GetTimerBaseTime(RecompContext* ctx);
undefined iGetTimerCount(RecompContext* ctx);
void GetTimerCount(RecompContext* ctx);
undefined iSetTimerHandler(RecompContext* ctx);
undefined SetTimerHandler(RecompContext* ctx);
void TimerBusClock2USec(RecompContext* ctx);
undefined TimerUSec2BusClock(RecompContext* ctx);
undefined TimerBusClock2Freq(RecompContext* ctx);
void TimerFreq2BusClock(RecompContext* ctx);
undefined _InitAlarm(RecompContext* ctx);
undefined SetTimerAlarm(RecompContext* ctx);
undefined iSetTimerAlarm(RecompContext* ctx);
undefined ReleaseTimerAlarm(RecompContext* ctx);
undefined iReleaseTimerAlarm(RecompContext* ctx);
undefined sceSifInitRebootNotify(RecompContext* ctx);
void sceSifSetRebootNotifyBuffer(RecompContext* ctx);
undefined sceSifAddRebootNotifyHandler(RecompContext* ctx);
undefined sceSifRemoveRebootNotifyHandler(RecompContext* ctx);
undefined sceSifExecNotifyHandler(RecompContext* ctx);
undefined sceResetttyinit(RecompContext* ctx);
undefined VSync(RecompContext* ctx);
undefined VSync2(RecompContext* ctx);
void write(RecompContext* ctx);
void read(RecompContext* ctx);
void open(RecompContext* ctx);
void close(RecompContext* ctx);
void ioctl(RecompContext* ctx);
void lseek(RecompContext* ctx);
void sbrk(RecompContext* ctx);
void isatty(RecompContext* ctx);
void fstat(RecompContext* ctx);
void getpid(RecompContext* ctx);
void kill(RecompContext* ctx);
undefined stat(RecompContext* ctx);
undefined unlink(RecompContext* ctx);
undefined sceDeci2Open(RecompContext* ctx);
void sceDeci2Close(RecompContext* ctx);
undefined sceDeci2ReqSend(RecompContext* ctx);
undefined sceDeci2Poll(RecompContext* ctx);
void sceDeci2GrpOpen(RecompContext* ctx);
void sceDeci2GrpClose(RecompContext* ctx);
undefined sceDeci2ExRecv(RecompContext* ctx);
undefined sceDeci2ExSend(RecompContext* ctx);
void sceDeci2ExReqSend(RecompContext* ctx);
void sceDeci2ExLock(RecompContext* ctx);
void sceDeci2ExUnLock(RecompContext* ctx);
undefined kputs(RecompContext* ctx);
undefined sceTtyWrite(RecompContext* ctx);
undefined sceTtyRead(RecompContext* ctx);
undefined sceTtyInit(RecompContext* ctx);
undefined sceSifGetSreg(RecompContext* ctx);
undefined sceSifSetSreg(RecompContext* ctx);
void sceSifGetDataTable(RecompContext* ctx);
undefined sceSifInitCmd(RecompContext* ctx);
undefined sceSifExitCmd(RecompContext* ctx);
void sceSifSetCmdBuffer(RecompContext* ctx);
void sceSifSetSysCmdBuffer(RecompContext* ctx);
undefined sceSifAddCmdHandler(RecompContext* ctx);
undefined sceSifRemoveCmdHandler(RecompContext* ctx);
undefined sceSifSendCmd(RecompContext* ctx);
undefined isceSifSendCmd(RecompContext* ctx);
undefined sceSifWriteBackDCache(RecompContext* ctx);
undefined sceVif1PkInit(RecompContext* ctx);
undefined sceVif1PkReset(RecompContext* ctx);
undefined sceVif1PkTerminate(RecompContext* ctx);
undefined sceVif1PkCnt(RecompContext* ctx);
undefined sceVif1PkEnd(RecompContext* ctx);
undefined sceVif1PkOpenDirectCode(RecompContext* ctx);
undefined sceVif1PkCloseDirectCode(RecompContext* ctx);
undefined sceVif1PkOpenGifTag(RecompContext* ctx);
undefined sceVif1PkCloseGifTag(RecompContext* ctx);
undefined sceVif1PkAlign(RecompContext* ctx);
undefined sceVif1PkAddGsData(RecompContext* ctx);
undefined sceGsResetGraph(RecompContext* ctx);
undefined sceGsGetGParam(RecompContext* ctx);
undefined sceGsResetPath(RecompContext* ctx);
undefined sceGsSetDefDrawEnv(RecompContext* ctx);
undefined sceGsPutDrawEnv(RecompContext* ctx);
undefined sceGsSetDefDBuff(RecompContext* ctx);
undefined sceGsSwapDBuff(RecompContext* ctx);
undefined sceGsSyncV(RecompContext* ctx);
undefined sceGsSyncPath(RecompContext* ctx);
undefined sceGsSetDefTexEnv(RecompContext* ctx, undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined2 param_9, undefined2 param_10, undefined2 param_11, undefined2 param_12);
undefined sceGsSetDefAlphaEnv(RecompContext* ctx);
undefined sceGsSetHalfOffset(RecompContext* ctx);
undefined sceGsSetDefDispEnv(RecompContext* ctx);
undefined sceGsPutDispEnv(RecompContext* ctx);
undefined sceGszbufaddr(RecompContext* ctx);
undefined sceGsSetDefClear(RecompContext* ctx, undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined1 param_9, undefined1 param_10, undefined4 param_11);
undefined sceDmaGetChan(RecompContext* ctx);
undefined sceDmaReset(RecompContext* ctx);
undefined sceDmaPutEnv(RecompContext* ctx);
void sceDmaGetEnv(RecompContext* ctx);
void sceDmaPutStallAddr(RecompContext* ctx);
undefined sceDmaSend(RecompContext* ctx);
undefined sceDmaSendN(RecompContext* ctx);
void sceDmaSendI(RecompContext* ctx);
void sceDmaRecv(RecompContext* ctx);
void sceDmaRecvN(RecompContext* ctx);
void sceDmaRecvI(RecompContext* ctx);
undefined sceDmaSync(RecompContext* ctx);
undefined sceDmaWatch(RecompContext* ctx);
undefined sceDmaPause(RecompContext* ctx);
void sceDmaRestart(RecompContext* ctx);
undefined scePad2Init(RecompContext* ctx);
undefined scePad2End(RecompContext* ctx);
undefined scePad2CreateSocket(RecompContext* ctx);
undefined scePad2DeleteSocket(RecompContext* ctx);
undefined scePad2Read(RecompContext* ctx);
undefined scePad2GetButtonProfile(RecompContext* ctx);
undefined scePad2GetState(RecompContext* ctx);
void scePad2GetButtonInfo(RecompContext* ctx);
void scePad2StateIntToStr(RecompContext* ctx);
void sceVibGetProfile(RecompContext* ctx);
undefined sceVibSetActParam(RecompContext* ctx);
undefined sceDbcInit(RecompContext* ctx);
undefined sceDbcEnd(RecompContext* ctx);
undefined sceDbcSetWorkAddr(RecompContext* ctx);
undefined sceDbcCreateSocket(RecompContext* ctx);
undefined sceDbcDeleteSocket(RecompContext* ctx);
undefined sceDbcGetDepNumber(RecompContext* ctx);
undefined sceDbcGetConnection(RecompContext* ctx);
void sceDbcInitSocket(RecompContext* ctx);
void sceDbcResetSocket(RecompContext* ctx);
void sceDbcGetDeviceStatus(RecompContext* ctx);
undefined sceDbcSearchPortSpecific(RecompContext* ctx);
undefined sceDbcSRData(RecompContext* ctx);
void sceDbcSendData(RecompContext* ctx);
undefined sceDbcSendData2(RecompContext* ctx);
undefined sceDbcSendData3(RecompContext* ctx);
undefined sceDbcReceiveData(RecompContext* ctx);
undefined sceCdCallback(RecompContext* ctx);
undefined _sceCd_cd_callback(RecompContext* ctx);
void _sceCd_cbLoop(RecompContext* ctx);
void sceCdInitEeCB(RecompContext* ctx);
void _sceCd_cd_read_intr(RecompContext* ctx);
undefined sceCdPOffCallback(RecompContext* ctx);
undefined sceCdLayerSearchFile(RecompContext* ctx);
undefined sceCdSearchFile(RecompContext* ctx);
undefined _sceCd_ncmd_prechk(RecompContext* ctx);
undefined sceCdNcmdDiskReady(RecompContext* ctx);
undefined sceCdSync(RecompContext* ctx);
undefined sceCdSyncS(RecompContext* ctx);
undefined _sceCd_scmd_prechk(RecompContext* ctx);
void _sceCdSC(RecompContext* ctx);
undefined sceCdInit(RecompContext* ctx);
undefined sceCdDiskReady_old(RecompContext* ctx);
undefined sceCdDiskReady(RecompContext* ctx);
undefined sceCdPowerOff(RecompContext* ctx);
undefined sceCdMmode(RecompContext* ctx);
undefined sceCdChgSys(RecompContext* ctx);
void sceInetPoll(RecompContext* ctx);
undefined sceInetName2Address(RecompContext* ctx);
undefined sceInetAddress2String(RecompContext* ctx);
undefined sceInetAddress2Name(RecompContext* ctx, undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined4 param_9);
undefined sceInetCreate(RecompContext* ctx);
undefined sceInetOpen(RecompContext* ctx);
undefined sceInetClose(RecompContext* ctx);
undefined sceInetRecv(RecompContext* ctx);
undefined sceInetRecvFrom(RecompContext* ctx, undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined4 param_9);
undefined sceInetSend(RecompContext* ctx);
undefined sceInetSendTo(RecompContext* ctx, undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined4 param_9);
void sceInetAbort(RecompContext* ctx);
void sceInetControl(RecompContext* ctx);
undefined sceInetGetInterfaceList(RecompContext* ctx);
undefined sceInetInterfaceControl(RecompContext* ctx);
undefined sceInetGetRoutingTable(RecompContext* ctx);
undefined sceInetGetNameServers(RecompContext* ctx);
void sceInetChangeThreadPriority(RecompContext* ctx);
void sceInetGetLog(RecompContext* ctx);
void sceInetAbortLog(RecompContext* ctx);
undefined sceInetCtlUpInterface(RecompContext* ctx);
void sceInetCtlDownInterface(RecompContext* ctx);
undefined sceInetCtlSetAutoMode(RecompContext* ctx);
void sceInetCtlGetState(RecompContext* ctx);
undefined sceLibnetInitialize(RecompContext* ctx);
undefined sceLibnetTerminate(RecompContext* ctx);
undefined sceLibnetRegisterHandler(RecompContext* ctx);
undefined sceLibnetUnregisterHandler(RecompContext* ctx);
undefined sceLibnetSetConfiguration(RecompContext* ctx);
undefined sceLibnetWaitGetInterfaceID(RecompContext* ctx);
undefined sceLibnetWaitGetAddress(RecompContext* ctx);
void sceLibnetWaitGetInterfaceEvent(RecompContext* ctx);
undefined sceSifMInitRpc(RecompContext* ctx);
undefined sceSifMExitRpc(RecompContext* ctx);
void sceSifMBindRpc(RecompContext* ctx);
undefined sceSifMBindRpcParam(RecompContext* ctx);
undefined sceSifMUnBindRpc(RecompContext* ctx);
undefined sceSifMCallRpc(RecompContext* ctx, undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined4 param_9);
undefined sceMc2Init(RecompContext* ctx);
undefined sceMc2End(RecompContext* ctx);
undefined sceMc2CreateSocket(RecompContext* ctx);
undefined sceMc2DeleteSocket(RecompContext* ctx);
void sceMc2SearchSocket(RecompContext* ctx);
void sceMc2ChangeThreadPriority(RecompContext* ctx);
void sceMc2iChangeThreadPriority(RecompContext* ctx);
undefined sceMc2FormatAsync(RecompContext* ctx);
undefined sceMc2UnformatAsync(RecompContext* ctx);
undefined sceMc2GetInfoAsync(RecompContext* ctx);
undefined sceMc2SearchFileAsync(RecompContext* ctx);
undefined sceMc2GetDirAllAsync(RecompContext* ctx);
undefined sceMc2ReadFileAsync(RecompContext* ctx);
undefined sceMc2WriteFileAsync(RecompContext* ctx);
undefined sceMc2CreateFileAsync(RecompContext* ctx);
undefined sceMc2DeleteAsync(RecompContext* ctx);
undefined sceMc2GetDirAsync(RecompContext* ctx);
undefined sceMc2MkdirAsync(RecompContext* ctx);
undefined sceMc2ChdirAsync(RecompContext* ctx);
undefined sceMc2ChmodAsync(RecompContext* ctx);
undefined sceMc2RenameAsync(RecompContext* ctx);
undefined sceMc2GetEntSpaceAsync(RecompContext* ctx);
void sceMc2CheckAsync(RecompContext* ctx);
undefined sceMc2Sync(RecompContext* ctx);
undefined sceMc2GetInfo(RecompContext* ctx);
void sceMc2Format(RecompContext* ctx);
void sceMc2Unformat(RecompContext* ctx);
undefined sceMc2ReadFile(RecompContext* ctx);
undefined sceMc2WriteFile(RecompContext* ctx);
undefined sceMc2CreateFile(RecompContext* ctx);
undefined sceMc2Delete(RecompContext* ctx);
void sceMc2Rename(RecompContext* ctx);
undefined sceMc2Mkdir(RecompContext* ctx);
undefined sceMc2Chdir(RecompContext* ctx);
undefined sceMc2GetDir(RecompContext* ctx);
void sceMc2Chmod(RecompContext* ctx);
void sceMc2SearchFile(RecompContext* ctx);
void sceMc2GetEntSpace(RecompContext* ctx);
undefined _sceMcFatInit(RecompContext* ctx);
undefined _sceMcFatInit2(RecompContext* ctx);
undefined _sceMcFatGetInfo(RecompContext* ctx);
undefined _sceMcFatFormat(RecompContext* ctx);
undefined _sceMcFatUnFormat(RecompContext* ctx);
undefined _sceMcFatSearchFile(RecompContext* ctx);
undefined _sceMcFatCreateFile(RecompContext* ctx);
undefined _sceMcFatReadFile(RecompContext* ctx);
undefined _sceMcFatWriteFile(RecompContext* ctx);
undefined _sceMcFatDeleteFile(RecompContext* ctx);
undefined _sceMcFatChDir(RecompContext* ctx);
undefined _sceMcFatGetDir(RecompContext* ctx);
undefined _sceMcFatSetAttr(RecompContext* ctx);
undefined _sceMcFatRename(RecompContext* ctx);
undefined _sceMcFatGetEntSpace(RecompContext* ctx);
undefined _sceMcpInit(RecompContext* ctx);
undefined _sceMcpGetCardSpec(RecompContext* ctx);
undefined _sceMcpCheckNewCard(RecompContext* ctx);
undefined _sceMcpAuthentication(RecompContext* ctx);
undefined _sceMcpReadSysInfo(RecompContext* ctx);
undefined _sceMcpWriteSysInfo(RecompContext* ctx);
undefined _sceMcpReadClust(RecompContext* ctx);
undefined _sceMcpWriteClust(RecompContext* ctx);
undefined _sceMcpFlushCache(RecompContext* ctx);
undefined _sceMcpWriteUserClustOnCache(RecompContext* ctx);
undefined _sceMcpReadUserClustOnCache(RecompContext* ctx);
undefined _sceMcpReadUserClust(RecompContext* ctx);
undefined _sceMcpWriteUserClust(RecompContext* ctx);
undefined _sceMcpIsSpeckOutBlock(RecompContext* ctx);
undefined _sceMcpIsSpeckOutClust(RecompContext* ctx);
undefined _sceMcpMakeSpecoutBlock(RecompContext* ctx);
void _SceMcComGetSysInfo(RecompContext* ctx);
undefined _sceMcCoreInit(RecompContext* ctx);
undefined _sceMcCoreEnd(RecompContext* ctx);
undefined _sceMcCoreSetWriteBackHole(RecompContext* ctx);
undefined _sceMcCoreSetCardSpec(RecompContext* ctx);
undefined _sceMcCoreGetCardSpec(RecompContext* ctx);
undefined _sceMcCoreCheckNewCard(RecompContext* ctx);
undefined _sceMcCoreClearNewCardFlag(RecompContext* ctx);
undefined _sceMcCoreAuthentication(RecompContext* ctx);
undefined _sceMcCoreWriteBack(RecompContext* ctx);
undefined _sceMcCoreReadClock(RecompContext* ctx);
undefined _sceMcCoreReadPage2(RecompContext* ctx);
undefined _sceMcCoreReadPage(RecompContext* ctx);
undefined _sceMcCoreWritePage(RecompContext* ctx);
undefined _sceMcCoreWriteSameData(RecompContext* ctx);
undefined _sceMcCoreBlockErase(RecompContext* ctx);
undefined _sceMcCoreGetConnection(RecompContext* ctx);
undefined _sceMcCoreCreateSocket(RecompContext* ctx);
undefined _sceMcCoreCheckSocket(RecompContext* ctx);
undefined _sceMcCoreDeleteSocket(RecompContext* ctx);
undefined _sceMcCoreChangeSocketTypeDbc2Mc(RecompContext* ctx);
undefined _sceMcCoreChangeSocketTypeMc2Dbc(RecompContext* ctx);
undefined sceNetcnfifSetup(RecompContext* ctx);
undefined sceNetcnfifInit(RecompContext* ctx);
undefined sceNetcnfifCreateCallbackThread(RecompContext* ctx);
void sceNetcnfifDeleteCallbackThread(RecompContext* ctx);
undefined sceNetcnfifSync(RecompContext* ctx);
undefined sceNetcnfifCheck(RecompContext* ctx);
undefined sceNetcnfifGetResult(RecompContext* ctx);
undefined sceNetcnfifSetFNoDecode(RecompContext* ctx);
undefined sceNetcnfifGetCount(RecompContext* ctx);
undefined sceNetcnfifGetList(RecompContext* ctx);
undefined sceNetcnfifLoadEntry(RecompContext* ctx);
undefined sceNetcnfifLoadEntryAuto(RecompContext* ctx);
void sceNetcnfifAddEntry(RecompContext* ctx);
void sceNetcnfifEditEntry(RecompContext* ctx);
void sceNetcnfifDeleteEntry(RecompContext* ctx);
void sceNetcnfifSetLatestEntry(RecompContext* ctx);
void sceNetcnfifDeleteAll(RecompContext* ctx);
void sceNetcnfifCheckCapacity(RecompContext* ctx);
void sceNetcnfifCheckAdditionalAT(RecompContext* ctx);
void sceNetcnfifCheckSpecialProvider(RecompContext* ctx);
undefined sceNetcnfifGetAddr(RecompContext* ctx);
undefined sceNetcnfifAllocWorkarea(RecompContext* ctx);
undefined sceNetcnfifFreeWorkarea(RecompContext* ctx);
undefined sceNetcnfifSetEnv(RecompContext* ctx);
void sceNetcnfifTerm(RecompContext* ctx);
undefined sce_create_callback_thread(RecompContext* ctx);
undefined sce_delete_callback_thread(RecompContext* ctx);
undefined sceNetcnfifSendIOP(RecompContext* ctx);
undefined sceNetcnfifDmaCheck(RecompContext* ctx);
undefined sce_call_rpc(RecompContext* ctx);
undefined sce_sync(RecompContext* ctx);
undefined __divdi3(RecompContext* ctx);
undefined __moddi3(RecompContext* ctx);
undefined __udivdi3(RecompContext* ctx);
undefined __umoddi3(RecompContext* ctx);
undefined __floatdisf(RecompContext* ctx);
undefined __fixunsdfdi(RecompContext* ctx);
undefined __fixunssfdi(RecompContext* ctx);
undefined __do_global_dtors(RecompContext* ctx);
undefined __do_global_ctors(RecompContext* ctx);
undefined __main(RecompContext* ctx);
undefined fptodp(RecompContext* ctx);
void Function_0x25080(RecompContext* ctx);
void Section_0x1_field_0x252CC(RecompContext* ctx);
undefined dpadd(RecompContext* ctx);
undefined dpsub(RecompContext* ctx);
undefined dpmul(RecompContext* ctx);
undefined dpdiv(RecompContext* ctx);
undefined dpcmp(RecompContext* ctx);
undefined litodp(RecompContext* ctx);
undefined __make_dp(RecompContext* ctx);
undefined dptofp(RecompContext* ctx);
undefined dptoul(RecompContext* ctx);
void Function_0x25B30(RecompContext* ctx);
undefined __register_frame_info(RecompContext* ctx);
undefined __register_frame(RecompContext* ctx);
undefined __register_frame_info_table(RecompContext* ctx);
void __register_frame_table(RecompContext* ctx);
undefined __deregister_frame_info(RecompContext* ctx);
void __deregister_frame(RecompContext* ctx);
void Function_0x26920(RecompContext* ctx);
void __frame_state_for(RecompContext* ctx);
undefined __muldi3(RecompContext* ctx);
undefined __floatdidf(RecompContext* ctx);
undefined __unpack_f(RecompContext* ctx);
undefined __make_fp(RecompContext* ctx);
undefined __pack_d(RecompContext* ctx);
undefined __unpack_d(RecompContext* ctx);
undefined __fpcmp_parts_d(RecompContext* ctx);
undefined __pack_f(RecompContext* ctx);
void atexit(RecompContext* ctx);
void atoi(RecompContext* ctx);
undefined __errno(RecompContext* ctx);
undefined memalign(RecompContext* ctx);
undefined _memalign_r(RecompContext* ctx);
void Function_0x27808(RecompContext* ctx);
undefined _malloc_r(RecompContext* ctx);
void memset_ps2(RecompContext* ctx, int dst, int value, int length);
undefined __malloc_lock(RecompContext* ctx);
undefined __malloc_unlock(RecompContext* ctx);
void _printf_r(RecompContext* ctx);
undefined _sbrk_r(RecompContext* ctx);
undefined _init_signal_r(RecompContext* ctx);
undefined _signal_r(RecompContext* ctx);
undefined _raise_r(RecompContext* ctx);
undefined __sigtramp_r(RecompContext* ctx);
void raise(RecompContext* ctx);
undefined signal(RecompContext* ctx);
void _init_signal(RecompContext* ctx);
void __sigtramp(RecompContext* ctx);
undefined _kill_r(RecompContext* ctx);
undefined _getpid_r(RecompContext* ctx);
void _sprintf_r(RecompContext* ctx);
undefined _strtol_r(RecompContext* ctx);
void strtol(RecompContext* ctx);
undefined _vfprintf_r(RecompContext* ctx);
void Function_0x2B1D8(RecompContext* ctx);
undefined __svfscanf(RecompContext* ctx);
undefined __sccl(RecompContext* ctx);
void vsprintf_r(RecompContext* ctx);
undefined __swsetup(RecompContext* ctx);
void atof(RecompContext* ctx);
void atol(RecompContext* ctx);
undefined _dtoa_r(RecompContext* ctx);
undefined __sfmoreglue(RecompContext* ctx);
undefined __sfp(RecompContext* ctx);
undefined _cleanup_r(RecompContext* ctx);
void _cleanup(RecompContext* ctx);
undefined __sinit(RecompContext* ctx);
undefined _free_r(RecompContext* ctx);
undefined _malloc_trim_r(RecompContext* ctx);
undefined __sfvwrite(RecompContext* ctx);
undefined _fwalk(RecompContext* ctx);
void _setlocale_r(RecompContext* ctx);
undefined _localeconv_r(RecompContext* ctx);
void setlocale(RecompContext* ctx);
void* localeconv(RecompContext* ctx);
undefined __smakebuf(RecompContext* ctx);
undefined _mbtowc_r(RecompContext* ctx);
undefined _Balloc(RecompContext* ctx);
undefined _Bfree(RecompContext* ctx);
undefined _multadd(RecompContext* ctx);
undefined _s2b(RecompContext* ctx);
undefined _hi0bits(RecompContext* ctx);
undefined _lo0bits(RecompContext* ctx);
undefined _i2b(RecompContext* ctx);
undefined _multiply(RecompContext* ctx);
undefined _pow5mult(RecompContext* ctx);
undefined _lshift(RecompContext* ctx);
undefined __mcmp(RecompContext* ctx);
undefined __mdiff(RecompContext* ctx);
undefined _ulp(RecompContext* ctx);
undefined _b2d(RecompContext* ctx);
undefined _d2b(RecompContext* ctx);
undefined _ratio(RecompContext* ctx);
void _mprec_log10(RecompContext* ctx);
undefined __srefill(RecompContext* ctx);
void __sread(RecompContext* ctx);
void __swrite(RecompContext* ctx);
void __sseek(RecompContext* ctx);
void __sclose(RecompContext* ctx);
void _strtod_r(RecompContext* ctx);
void strtod(RecompContext* ctx);
void strtodf(RecompContext* ctx);
undefined _strtoul_r(RecompContext* ctx);
undefined strtoul(RecompContext* ctx);
undefined __submore(RecompContext* ctx);
undefined _write_r(RecompContext* ctx);
undefined _calloc_r(RecompContext* ctx);
undefined _close_r(RecompContext* ctx);
undefined _fstat_r(RecompContext* ctx);
undefined _lseek_r(RecompContext* ctx);
undefined _read_r(RecompContext* ctx);
undefined _realloc_r(RecompContext* ctx);
undefined _sceSDC(RecompContext* ctx);
undefined SyncDCache(RecompContext* ctx);
void iSyncDCache(RecompContext* ctx);
undefined _sceIDC(RecompContext* ctx);
void InvalidDCache(RecompContext* ctx);
void iInvalidDCache(RecompContext* ctx);
undefined __fixdfdi(RecompContext* ctx);
undefined dptoli(RecompContext* ctx);
undefined ExceptionCallback(RecompContext* ctx);
int main(RecompContext* ctx, int argc, char** argv);
undefined FUN_00104ff0(RecompContext* ctx);
undefined FUN_001050a0(RecompContext* ctx);
undefined FUN_001059d8(RecompContext* ctx);
undefined FUN_00107c70(RecompContext* ctx);
undefined FUN_00107ca8(RecompContext* ctx);
undefined FUN_00107d58(RecompContext* ctx);
undefined FUN_00107d90(RecompContext* ctx);
undefined FUN_00107e20(RecompContext* ctx);
undefined FUN_00107ff8(RecompContext* ctx);
undefined FUN_00108d10(RecompContext* ctx);
undefined FUN_00108d68(RecompContext* ctx);
undefined FUN_00108d90(RecompContext* ctx);
undefined FUN_00108db8(RecompContext* ctx);
undefined FUN_001091c0(RecompContext* ctx);
undefined FUN_00109268(RecompContext* ctx);
undefined FUN_00109288(RecompContext* ctx);
undefined FUN_001092b8(RecompContext* ctx);
undefined FUN_001092f8(RecompContext* ctx);
undefined FUN_001093c8(RecompContext* ctx);
undefined FUN_00109408(RecompContext* ctx);
undefined FUN_00109640(RecompContext* ctx);
undefined FUN_00109690(RecompContext* ctx);
undefined FUN_001096d0(RecompContext* ctx);
undefined FUN_001098f0(RecompContext* ctx);
undefined FUN_0010a0b0(RecompContext* ctx);
undefined FUN_0010a120(RecompContext* ctx);
undefined FUN_0010a1a0(RecompContext* ctx);
undefined FUN_0010a228(RecompContext* ctx, undefined param_1, undefined param_2, undefined param_3, undefined param_4, undefined param_5, undefined param_6, undefined param_7, undefined param_8, undefined4 param_9, undefined4 param_10);
undefined FUN_0010a318(RecompContext* ctx);
undefined FUN_0010a388(RecompContext* ctx);
undefined FUN_0010a740(RecompContext* ctx);
undefined FUN_0010a798(RecompContext* ctx);
undefined FUN_0010a7c8(RecompContext* ctx);
undefined FUN_0010a878(RecompContext* ctx);
undefined FUN_0010aac8(RecompContext* ctx);
undefined FUN_0010bea8(RecompContext* ctx);
undefined FUN_0010e238(RecompContext* ctx);
undefined FUN_0010e338(RecompContext* ctx);
undefined FUN_0010e400(RecompContext* ctx);
undefined FUN_0010ea10(RecompContext* ctx);
undefined FUN_0010ec78(RecompContext* ctx);
undefined FUN_0010f360(RecompContext* ctx);
undefined FUN_0010f370(RecompContext* ctx);
void RFU091(RecompContext* ctx);
undefined SetSyscall(RecompContext* ctx);
void SetTLBEntry1(RecompContext* ctx);
undefined FUN_0010f590(RecompContext* ctx);
undefined FUN_0010fb88(RecompContext* ctx);
undefined FUN_0010fbf8(RecompContext* ctx);
undefined FUN_0010fc08(RecompContext* ctx);
undefined FUN_0010fc40(RecompContext* ctx);
undefined FUN_0010fc80(RecompContext* ctx);
undefined FUN_0010fcc8(RecompContext* ctx);
undefined FUN_0010fe40(RecompContext* ctx);
undefined FUN_0010fe50(RecompContext* ctx);
undefined FUN_0010fe98(RecompContext* ctx);
undefined FUN_0010ffb0(RecompContext* ctx);
undefined FUN_0010ffc0(RecompContext* ctx);
undefined FUN_00110000(RecompContext* ctx);
void InitTLBRef(RecompContext* ctx);
undefined FUN_00110260(RecompContext* ctx);
undefined FUN_00110270(RecompContext* ctx);
undefined FUN_00110780(RecompContext* ctx);
undefined FUN_00110910(RecompContext* ctx);
undefined FUN_00110998(RecompContext* ctx);
undefined FUN_001109d0(RecompContext* ctx);
undefined FUN_00111750(RecompContext* ctx);
undefined FUN_00112358(RecompContext* ctx);
undefined FUN_00112380(RecompContext* ctx);
undefined FUN_001123c0(RecompContext* ctx);
undefined FUN_00112400(RecompContext* ctx);
undefined FUN_001128a0(RecompContext* ctx);
undefined FUN_001128c0(RecompContext* ctx);
undefined FUN_00112cc8(RecompContext* ctx);
undefined FUN_00112e80(RecompContext* ctx);
undefined FUN_00114108(RecompContext* ctx);
undefined GetGsDxDyOffset(RecompContext* ctx);
undefined FUN_001147c0(RecompContext* ctx);
undefined FUN_00114830(RecompContext* ctx);
undefined FUN_001148b8(RecompContext* ctx);
undefined FUN_001148e0(RecompContext* ctx);
undefined FUN_001155d8(RecompContext* ctx);
undefined FUN_00115650(RecompContext* ctx);
undefined FUN_001156a8(RecompContext* ctx);
undefined FUN_00115710(RecompContext* ctx);
undefined FUN_00115778(RecompContext* ctx);
undefined FUN_001157d8(RecompContext* ctx);
undefined FUN_00115a30(RecompContext* ctx);
undefined FUN_00115d70(RecompContext* ctx);
undefined FUN_00116c58(RecompContext* ctx);
undefined FUN_00116fb0(RecompContext* ctx);
undefined FUN_00117098(RecompContext* ctx);
undefined FUN_001171b8(RecompContext* ctx);
undefined FUN_00117210(RecompContext* ctx);
undefined FUN_00118380(RecompContext* ctx);
undefined FUN_00118438(RecompContext* ctx);
undefined FUN_00118490(RecompContext* ctx);
undefined FUN_001184e8(RecompContext* ctx);
undefined FUN_00118578(RecompContext* ctx);
undefined FUN_00119498(RecompContext* ctx);
undefined FUN_00119528(RecompContext* ctx);
undefined FUN_00119548(RecompContext* ctx);
undefined FUN_00119568(RecompContext* ctx);
undefined FUN_00119648(RecompContext* ctx);
undefined FUN_00119670(RecompContext* ctx);
undefined FUN_00119708(RecompContext* ctx);
undefined FUN_001199a0(RecompContext* ctx);
undefined FUN_001199f8(RecompContext* ctx);
undefined FUN_00119aa0(RecompContext* ctx);
undefined FUN_00119ac0(RecompContext* ctx);
undefined FUN_0011b458(RecompContext* ctx);
undefined FUN_0011b670(RecompContext* ctx);
undefined FUN_0011bae8(RecompContext* ctx);
undefined FUN_0011bb48(RecompContext* ctx);
undefined FUN_0011bbb8(RecompContext* ctx);
undefined FUN_0011bc10(RecompContext* ctx);
bool FUN_0011bcc8(RecompContext* ctx, char* param_1, char* param_2);
undefined FUN_0011be48(RecompContext* ctx);
undefined FUN_0011bf68(RecompContext* ctx);
undefined FUN_0011bfb0(RecompContext* ctx);
undefined FUN_0011c200(RecompContext* ctx);
undefined FUN_0011c320(RecompContext* ctx);
undefined FUN_0011c3b0(RecompContext* ctx);
undefined FUN_0011c4c8(RecompContext* ctx);
undefined FUN_0011c510(RecompContext* ctx);
undefined FUN_0011c578(RecompContext* ctx);
undefined FUN_0011c6a8(RecompContext* ctx);
undefined FUN_0011c7d8(RecompContext* ctx);
undefined FUN_0011c8b0(RecompContext* ctx);
undefined FUN_0011ca30(RecompContext* ctx);
undefined FUN_0011cac0(RecompContext* ctx);
undefined FUN_0011d8e0(RecompContext* ctx);
undefined FUN_0011d988(RecompContext* ctx);
undefined FUN_0011d9e8(RecompContext* ctx);
undefined FUN_0011dc60(RecompContext* ctx);
undefined FUN_0011e0b0(RecompContext* ctx);
undefined FUN_0011e258(RecompContext* ctx);
undefined FUN_0011e388(RecompContext* ctx);
undefined FUN_0011e858(RecompContext* ctx);
undefined FUN_00120f30(RecompContext* ctx);
undefined FUN_00121000(RecompContext* ctx);
undefined FUN_00121058(RecompContext* ctx);
undefined FUN_00121ec0(RecompContext* ctx);
undefined FUN_00122ea8(RecompContext* ctx);
undefined FUN_00122f90(RecompContext* ctx);
undefined FUN_00123180(RecompContext* ctx);
undefined FUN_001231a8(RecompContext* ctx);
undefined FUN_00123208(RecompContext* ctx);
undefined FUN_00125998(RecompContext* ctx);
undefined FUN_001259e0(RecompContext* ctx);
undefined FUN_00125a38(RecompContext* ctx);
undefined FUN_001262b8(RecompContext* ctx);
undefined FUN_001262f8(RecompContext* ctx);
undefined FUN_00126388(RecompContext* ctx);
undefined FUN_001263e0(RecompContext* ctx);
undefined FUN_00126548(RecompContext* ctx);
undefined FUN_001266f0(RecompContext* ctx);
undefined FUN_00126800(RecompContext* ctx);
undefined FUN_00129830(RecompContext* ctx);
undefined FUN_00129878(RecompContext* ctx);
undefined FUN_0012b018(RecompContext* ctx);
undefined FUN_0012c240(RecompContext* ctx);
undefined FUN_0012d7f0(RecompContext* ctx);
undefined FUN_0012f800(RecompContext* ctx);
#endif
